var ComponentsSelect2 = (function () {
    var e = function () {
        function formatRepo(repo) {
            if (repo.loading) return repo.text;
            
            var markup;
            // for FAQ
            if(repo.hasOwnProperty('question')){                     
                markup =
                    "<div class='select2-result-repository clearfix'>" +
                    "<div class='select2-result-repository__meta'>" +
                    "<div class='select2-result-repository__title'>" + repo.question + "</div>";
                if (repo.answer) {
                    markup += "<div class='select2-result-repository__description'>" + repo.answer + "</div>";
                }
                if (repo.hasOwnProperty("max_range")) {
                    markup +=
                        "<div class='select2-result-repository__statistics'>" +
                        "<div class='select2-result-repository__forks'>Max Range: " + repo.max_range + "</div>" +
                        "<div class='select2-result-repository__stargazers'>Max Capacity: " + repo.max_capacity + "</div>" +
                        "<div class='select2-result-repository__watchers'>Max Baggage: " + repo.max_baggage + "</div>" +
                        "</div>";
                }
                markup += "</div></div>";
            } 
            // for Testimonial
            else if(repo.hasOwnProperty('testimonial')){                     
                markup =
                    "<div class='select2-result-repository clearfix'>" +
                    "<div class='select2-result-repository__avatar'><img src='" + repo.image + "' /></div>" +
                    "<div class='select2-result-repository__meta'>" +
                    "<div class='select2-result-repository__title'>" + repo.name + "</div>";
                if (repo.testimonial) {
                    markup += "<div class='select2-result-repository__description'>" + repo.testimonial + "</div>";
                }
                if (repo.hasOwnProperty("max_range")) {
                    markup +=
                        "<div class='select2-result-repository__statistics'>" +
                        "<div class='select2-result-repository__forks'>Max Range: " + repo.max_range + "</div>" +
                        "<div class='select2-result-repository__stargazers'>Max Capacity: " + repo.max_capacity + "</div>" +
                        "<div class='select2-result-repository__watchers'>Max Baggage: " + repo.max_baggage + "</div>" +
                        "</div>";
                }
                markup += "</div></div>";
            } 
            // For Airports/Aircraft
            else {
                markup =
                    "<div class='select2-result-repository clearfix'>" +
                    "<div class='select2-result-repository__avatar'><img src='" + repo.thumbnail_url + "' /></div>" +
                    "<div class='select2-result-repository__meta'>" +
                    "<div class='select2-result-repository__title'>" + repo.name + "</div>";
                if (repo.meta_description) {
                    markup += "<div class='select2-result-repository__description'>" + repo.meta_description + "</div>";
                }
                if (repo.hasOwnProperty("max_range")) {
                    markup +=
                        "<div class='select2-result-repository__statistics'>" +
                        "<div class='select2-result-repository__forks'>Max Range: " + repo.max_range + "</div>" +
                        "<div class='select2-result-repository__stargazers'>Max Capacity: " + repo.max_capacity + "</div>" +
                        "<div class='select2-result-repository__watchers'>Max Baggage: " + repo.max_baggage + "</div>" +
                        "</div>";
                }
                markup += "</div></div>";
            }

            return markup;
        }

        function formatRepoSelection(repo) {
            return repo.name || repo.text;
        }

        $.fn.select2.defaults.set("theme", "bootstrap");
        var placeholderText = "Select a State";

        $(".select2, .select2-multiple").each(function () {
            if (!$(this).hasClass("select2-hidden-accessible")) {
                $(this).select2({
                    placeholder: placeholderText,
                    width: null
                });
            }
        });

        $(".select2-allow-clear").each(function () {
            if (!$(this).hasClass("select2-hidden-accessible")) {
                $(this).select2({
                    allowClear: true,
                    placeholder: placeholderText,
                    width: null
                });
            }
        });

        $(".js-data-example-ajax").each(function () {
            if (!$(this).hasClass("select2-hidden-accessible")) {
                $(this).select2({
                    width: "off",
                    ajax: {
                        url: $(this).attr('href'),
                        dataType: "json",
                        delay: 250,
                        data: function (params) {
                            return {
                                q: params.term,
                                page: params.page,
                                language_id: $('#language_id').val() === '' ? 1 : $('#language_id').val()
                            };
                        },
                        processResults: function (data, params) {
                            return {
                                results: data.data.map(function (repo) {
                                    return {
                                        ...repo,
                                        id: repo.hasOwnProperty('slug') ? repo.slug : repo.id
                                    };
                                })
                            };
                        },
                        cache: false
                    },
                    escapeMarkup: function (markup) {
                        return markup;
                    },
                    minimumInputLength: 1,
                    templateResult: formatRepo,
                    templateSelection: formatRepoSelection
                });
            }
        });

        $("button[data-select2-open]").click(function () {
            $("#" + $(this).data("select2-open")).select2("open");
        });

        $(":checkbox").on("click", function () {
            $(this).parent().nextAll("select").prop("disabled", !this.checked);
        });

        $(".select2, .select2-multiple, .select2-allow-clear, .js-data-example-ajax").on("select2:open", function () {
            var classes = $(this).parents("[class*='has-']");
            if (classes.length) {
                classes[0].className.split(/\s+/).forEach(function (className) {
                    if (className.match("has-")) {
                        $("body > .select2-container").addClass(className);
                    }
                });
            }
        });

        $(".js-btn-set-scaling-classes").on("click", function () {
            $("#select2-multiple-input-sm, #select2-single-input-sm").next(".select2-container--bootstrap").addClass("input-sm");
            $("#select2-multiple-input-lg, #select2-single-input-lg").next(".select2-container--bootstrap").addClass("input-lg");
            $(this).removeClass("btn-primary btn-outline").prop("disabled", true);
        });
    };
    return {
        init: function () {
            e();
        }
    };
})();

App.isAngularJsApp() === false && jQuery(document).ready(function () {
    ComponentsSelect2.init();
});